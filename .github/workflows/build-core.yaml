name: Core Build

on:
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            build_linux: true
            build_apk: true
            build_appbundle: true
          - os: macos-13
            build_ios: true
            build_macos: true
          - os: windows-latest
            build_windows: true

    steps:
      - name: Checkout Repository
        # git ls-remote https://github.com/actions/checkout.git v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: "oracle"
          java-version: "21"

      - name: Setup Dart
        uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c # v1.7.1
        with:
          sdk: "stable"
          flavor: "release"

      - name: Setup Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a # v2.20.0
        with:
          flutter-version: "any"
          channel: "stable"
          cache: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@9fc6c4e9069bf8d3d10b2204b1fb8f6ef7065407 # v3.2.2

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze

      - name: Make artifacts dir
        shell: bash
        run: mkdir -p artifacts

      # === Linux
      - name: Install Linux dependencies
        if: matrix.build_linux == true
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Build and Compress Linux Executable
        if: matrix.build_linux == true
        run: |
          flutter build linux --release
          tar -cJf artifacts/app-release-linux.tar.xz -C build/linux/x64/release/bundle/ .

      - name: Upload Linux Artifact
        if: matrix.build_linux == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: app-release-linux.tar.xz
          path: artifacts/app-release-linux.tar.xz

      # === Android APK and App Bundle ===
      - name: Decode Keystore
        if: matrix.build_apk == true || matrix.build_appbundle == true
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        if: matrix.build_apk == true || matrix.build_appbundle == true
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK and Move to Artifacts
        if: matrix.build_apk == true
        run: |
          flutter build apk --release
          cp build/app/outputs/flutter-apk/app-release.apk artifacts/

      - name: Upload APK Artifact
        if: matrix.build_apk == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: app-release.apk
          path: artifacts/app-release.apk

      - name: Build App Bundle and Move to Artifacts
        if: matrix.build_appbundle == true
        run: |
          flutter build appbundle --release
          cp build/app/outputs/bundle/release/app-release.aab artifacts/

      - name: Upload App Bundle Artifact
        if: matrix.build_appbundle == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: app-release.aab
          path: artifacts/app-release.aab

      # === iOS
      - name: Build iOS
        if: matrix.build_ios == true
        run: |
          flutter build ipa --no-codesign --release
          mkdir -p Payload
          cp -r build/ios/archive/Runner.xcarchive/Products/Applications/Runner.app Payload/
          zip -r artifacts/app-release.ipa Payload

      - name: Upload iOS Artifact
        if: matrix.build_ios == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: app-release.ipa
          path: artifacts/app-release.ipa

      # === macOS App
      - name: Build and Compress macOS App
        if: matrix.build_macos == true
        run: |
          flutter build macos --release
          cp -r build/macos/Build/Products/Release/flutter_decks.app artifacts/
          cd artifacts
          zip -r app-release-macos.zip flutter_decks.app

      - name: Upload macOS Artifact
        if: matrix.build_macos == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: app-release-macos.zip
          path: artifacts/app-release-macos.zip

      # === Windows
      - name: Build Windows Executable and Move to Artifacts
        if: matrix.build_windows == true
        run: |
          flutter build windows --release
          copy build\windows\x64\runner\Release\flutter_decks.exe artifacts\app-release.exe

      - name: Upload Windows Artifact
        if: matrix.build_windows == true
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: app-release.exe
          path: artifacts/app-release.exe
